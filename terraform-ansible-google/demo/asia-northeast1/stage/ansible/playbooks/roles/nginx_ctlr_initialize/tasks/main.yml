---

# Check systems are debian (ubuntu) 

- name: Fail if not running on Debian
  fail: msg="These tasks should only be run on Debian/Ubuntu servers"
  when: ansible_os_family != "Debian"

# Disable swap since Kubernetes can't work with swap enabled (in order for the kubelet to work properly)

- name: Disable swap (if configured) (1/2)
  command: swapoff -a
  tags: ['skip_ansible_lint']

- name: Disable swap in fstab (2/2)
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

# Install NGINX Controller prerequisites
- name: Update repositories cache and install "jq" package
  apt:
    pkg: 
      - jq
      - python3-pip
    state: latest
    update_cache: yes

# Install prerequisites for gcp_storage_object module using pip2
- name: Install latest "google-auth" package
  pip:
    name: 
      - google-auth

# Copy over gcp creds file for gcp_storage_object module
- name: Copy file with owner and permissions
  copy:
    src: /drone/src/gcp/gcp_creds.json
    dest: /tmp/gcp_creds.json
    owner: root
    mode: '400'

# Using gsutil (part of google sdk) command to download the files as other modules fail
# First, authenticate with the service account credentials
- name: init with service account json
  shell: gcloud auth activate-service-account --key-file /tmp/gcp_creds.json

# Download the file to /tmp
- name: init with service account json
  shell: gsutil cp gs://{{ controller_bucket }}/{{ bucket_path }} {{ local_path }}
  register: ctlr_tarball

- debug:
    msg: "{{ ctlr_tarball }}"

# # Download the tarball from the google storage
# - name: Download v3 tarball
#   gcp_storage_object:
#     action: download
#     project: "{{ gcp_project }}"
#     auth_kind: serviceaccount
#     service_account_file: /tmp/gcp_creds.json
#     scopes:
#       - 'https://www.googleapis.com/auth/cloud-platform'
#       - 'https://www.googleapis.com/auth/cloud-platform.read-only'
#       - 'https://www.googleapis.com/auth/devstorage.full_control'
#       - 'https://www.googleapis.com/auth/devstorage.read_only'
#       - 'https://www.googleapis.com/auth/devstorage.read_write'
#     bucket: "{{ controller_bucket }}"
#     src: "{{ bucket_path }}"
#     dest: "{{ local_path }}"
#     overwrite: yes
#   register: ctlr_tarball

# - debug:
#     msg: "{{ ctlr_tarball }}"



# Remove gcp creds file
- name: Remove file (delete file)
  file:
    path: /tmp/gcp_creds.json
    state: absent

# - name: Wait for any possibly running unattended upgrade to finish
#   raw: systemd-run --property="After=apt-daily.service apt-daily-upgrade.service" --wait /bin/true

# - name: update and upgrade packages via apt
#   apt:
#     upgrade: yes
#     update_cache: yes
#   register: apt_status
#   until: apt_status is success
#   delay: 5
#   retries: 10
 
# - name: ensure nginx is at the latest version
#   apt: 
#     name=nginx state=latest

# - name: start nginx
#   service:
#     name: nginx
#     state: started