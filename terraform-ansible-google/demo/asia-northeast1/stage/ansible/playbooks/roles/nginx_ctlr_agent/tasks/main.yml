---

#debug variables
- name: Debug variables here
  debug:
    msg: "{{ hostvars }}"

# - name: Debug variables here
#   debug:
#     msg: "{{ hostvars['localhost'] }}"

# - name: Debug controller variables here
#   debug:
#     msg: "{{ hostvars[groups['gcp_nginx_controller_systems'][0]] }}"

# Install controller agent on NGINX+
- name: Get NGINX Controller API key for agent registration
  uri:
    url: "https://{{ controller_fqdn }}/{{ api_version }}/platform/global"
    method: "GET"
    return_content: yes
    status_code: 200
    validate_certs: false
    headers:
      Cookie: "{{ hostvars[groups['gcp_nginx_controller_systems'][0]].controller_auth_token }}"
  register: ctrl_globals

- name: Copy api_key to a variable
  set_fact:
    api_key: "{{ ctrl_globals.json.currentStatus.agentSettings.apiKey }}"

- name: Fail if required variables are not defined
  assert:
    that: ("{{ item }} is defined") and ("{{ item }} | length > 0")
  loop:
    - controller_fqdn
    - api_key

- name: COPY files/nginx-plus-api.conf /etc/nginx/conf.d/ necessary for process monitoring.
  copy:
    src: "files/nginx-plus-api.conf"
    dest: "/etc/nginx/conf.d/nginx-plus-api.conf"
    force: yes

- name: Download the installer script from NGINX Controller
  get_url:
    url: "https://{{ controller_fqdn }}:8443/1.4/install/controller/"
    dest: "{{ ansible_env.HOME }}/install.sh"
    validate_certs: no
    force: yes
  register: controller_return

# Debug variables used in the installer command
- name: Output agent install results
  debug:
    var: "{{ controller_hostname }}"

- name: Output agent install results
  debug:
    var: "{{ location }}"

- name: Output agent install results
  debug:
    var: "{{ instance_name }}"

- name: Run the NGINX Controller agent installer
  shell: |
    API_KEY='{{ api_key }}' \
    {{ (controller_hostname | length > 0) | ternary('CONTROLLER_HOSTNAME=' + controller_hostname,'') }} \
    {{ (controller_hostname | length > 0) | ternary('STORE_UUID=True','') }} \
    sh ./install.sh -y \
    {{ (location | length > 0) | ternary('-l ' + location,'') }} \
    {{ (instance_name | length > 0) | ternary('-i ' + instance_name,'') }}
  args:
    chdir: "{{ ansible_env.HOME }}"
    creates: /var/log/nginx-controller/agent.log
  register: agent_install

- name: Output agent install results
  debug:
    var: agent_install.stdout_lines

- name: Restart NGINX
  service:
    name: nginx
    state: restarted

- name: remove the install script
  file:
    path: "{{ ansible_env.HOME }}/install.sh"
    state: absent
