
---

- name: NGINX Controller Initialization
  hosts: gcp_nginx_controller_systems
  become: yes
  become_method: sudo
  become_user: root
  connection: ssh
  gather_facts: true
  roles: 
    - nginx_ctlr_initialize

# - name: Password generation
#   hosts: localhost
#   gather_facts: false
#   roles: 
#     - password_gen

- name: Postgresql installation
  hosts: gcp_nginx_controller_systems
  become: yes
  become_method: sudo
  become_user: root
  connection: ssh
  gather_facts: true
  roles: 
    - postgresql_initialize

- name: NGINX Controller Installation
  hosts: gcp_nginx_controller_systems
  become: yes
  become_user: root
  become_method: su  # note that the become method is required to be su, you will need to support that for your distribution.
  connection: ssh
  gather_facts: false
  # Using previously installed galaxy role
  roles:
    - nginxinc.nginx_controller_install
  vars:
    - ctrl_tarball_src: "/tmp/controller-installer-3.1.0.tar.gz"
    - ctrl_install_path: /home/ubuntu
    - remote_src: yes
    - db_host: nginx-controller-demo-ubuntu.c.f5-gcs-4261-sales-apcj-japan.internal
    - db_port: "5432"
    - db_user: "terry"
    - db_password: "{{ lookup('env', 'POSTGRESQL_PASS') }}"
    - tsdb_volume_type: local
    # - tsdb_nfs_path: "/controllerdb"
    # - tsdb_nfs_host: storage.internal
    - smtp_host: "localhost"
    - smtp_port: "25"
    - smtp_authentication: false
    - smtp_use_tls: false
    - noreply_address: "noreply@example.com"
    - fqdn:  ctlr1.nginx.local
    - organization_name: "F5"
    - admin_firstname: "f5"
    - admin_lastname: "f5demo"
    - admin_email: "f5demo@example.com"
    - admin_password: "{{ lookup('env', 'CONTROLLER_PASS') }}"
    - self_signed_cert: true
    - overwrite_existing_configs: true
    - auto_install_docker: true
    - controller_tarball: "controller-installer-3.1.0.tar.gz"
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_become_password: "{{ lookup('env', 'NGINX_SU_PASS') }}"


- name: NGINX Controller Post Installation Tasks
  hosts: gcp_nginx_controller_systems
  become: yes
  become_method: sudo
  connection: ssh
  gather_facts: false
  roles: 
    - nginx_ctlr_post

# License NGINX Controller
- name: Retrieve the NGINX Controller auth token
  include_role:
    name: nginxinc.nginx-controller-generate-token
  vars:
    user_email: "f5demo@example.com"
    user_password: "{{ lookup('env', 'CONTROLLER_PASS') }}"
    controller_fqdn: "ctlr1.nginx.local"

- name: Push the NGINX Controller license to your instance
  include_role:
    name: nginxinc.nginx-controller-license
  vars:
    # controller_auth_token: output by previous role in example
    license: "/tmp/controller_license202006.txt"

# - name: GKE nginxweb
#   hosts: gke_systems
#   connection: local
#   gather_facts: true
#   roles:
#    - app1_gke_onboarding

# - name: GCP NGINX Cache Config1
#   hosts: gcp_nginx_systems
#   become: yes
#   become_method: sudo
#   connection: ssh
#   gather_facts: true
#   roles:
#    - nginx_configure